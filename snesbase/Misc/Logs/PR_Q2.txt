I was going through a source file and saw this:
	rep	#$30
	sep	#$20
uh... would there be a point to resetting and setting $20?
>
>M = size of Accumulator or Memory data (except index values)
>X = size of Index register data
except index values?  what kind of index values?  (are they always 16bit then?)
>
>It would read 2 when M=1,3 when M=0. ADC is not dependent on X. An
>instruction such as LDX immediate would depend on X
doesn't this mean that, if you wrote an assembler routine for a certain mode, it would completely crash if you ran it in any other mode?
>
>Two ways... either a directive sets up the current 'state' or by use of .w and
>.b
>identifiers e.g. lda.w lda.b
hmm... well, the book never mentioned it and I've never seen a source file that used that notation...  Perhaps something like:
    cpy	#$0010
Implies that a 16-bit operand is used?
>  
>Not a clue. AFAIK no SNES code uses Emulation mode. There are a few
>basic things- the vectors are wrong, the Stack pointer is always at 01xx etc.
really?  Is it even worth emulating then?
>  
>When an address is X or Y indexed, this is a 'full' addition.
hmmmm...so... if DBR=0 and I:
    LDX #$10
    LDA $FFF5,X
A=($1.0005)?
>  
>Any way you like... do some of one, then some of another.
just curious, have you done some SPC emulation yet?

    - Qwertie (David Piepgrass)

Emulation page: http://www.geocities.com/TimesSquare/Arcade/4777/
Personal page:  http://www.geocities.com/SiliconValley/Bay/6633/
